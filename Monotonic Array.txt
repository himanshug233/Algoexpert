/*
Monotonic array
Write a function that takes in an array of integers and returns a boolean representing whether the array is monotonic.
An array is said to be monotonic if its elements, from left to right, are entirely non-increasing or entirely non-decreasing.

Sample Input
array = [-1, -5, -10, -1100, -1100, -1101, -1102, -9001]
Sample Output
true
*/

//Solution 1

using namespace std;
bool breakDirection(int direction, int previousInt, int currentInt){
	int diff = currentInt - previousInt;
	if(direction > 0)
		return diff < 0;
	return diff > 0;
}
bool isMonotonic(vector<int> array) {
	if(array.size() <= 2)
		return true;
	
	int direction = 0;
  for(int i = 0; i < array.size() - 1; i++){
		if(direction == 0){
			direction = array[i+1]-array[i];
			continue;
		}
		if(breakDirection(direction, array[i], array[i+1]))
			return false;
	}
  return true;
}

//Solution 2

using namespace std;

bool isMonotonic(vector<int> array) {
	bool is_non_decreasing = true;
	bool is_non_increasing = true;
	for(int i = 1; i<array.size(); i++){
		if(array[i] < array[i-1]){
			is_non_decreasing = false;
		}
		if(array[i] > array[i-1]){
			is_non_increasing = false;
		}
	}
  return is_non_decreasing || is_non_increasing;
}
